version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: x-bookmarker-postgres
    environment:
      POSTGRES_DB: x_bookmarker
      POSTGRES_USER: x_bookmarker
      POSTGRES_PASSWORD: x_bookmarker_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/backend/src/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U x_bookmarker -d x_bookmarker"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: x-bookmarker-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: packages/backend/Dockerfile
    container_name: x-bookmarker-backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: x_bookmarker
      DATABASE_USER: x_bookmarker
      DATABASE_PASSWORD: x_bookmarker_dev
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ./packages/backend:/app
      - /app/node_modules
      - ./storage:/app/storage
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev
    profiles:
      - development

  frontend:
    build:
      context: .
      dockerfile: packages/frontend/Dockerfile
    container_name: x-bookmarker-frontend
    ports:
      - "5173:5173"
    environment:
      VITE_API_BASE_URL: http://localhost:3001/api
    volumes:
      - ./packages/frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: npm run dev
    profiles:
      - development

  nginx:
    image: nginx:alpine
    container_name: x-bookmarker-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
    profiles:
      - production

volumes:
  postgres_data:
  redis_data: